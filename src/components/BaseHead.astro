---
import '../styles/global.css'
import { SEO } from 'astro-seo'

export interface Props {
  title: string
  description?: string
  canonicalURL?: string | URL
  inPost?: boolean
}

const { title, description, inPost } = Astro.props as Props

const meta = {
  title: 'jhcha.app',
  description:
    "Hi! I'm Joohoon Cha, and this is my personal website where I share my thoughts on various topics mostly related to programming and things that I'm interested in.",
  author: 'Joohoon Cha',
  image: {
    url: '/assets/og/og-image.png',
    alt: "Joohoon Cha's blog",
    width: 1280,
    height: 720,
  },
}

const extendMeta = {
  meta: [
    {
      name: 'twitter:image',
      content: Astro.site + meta.image.url,
    },
    { name: 'twitter:title', content: title },
    { name: 'twitter:description', content: description },
  ],
}
---

<head lang="en">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width" />
  <meta
    name="theme-color"
    media="(prefers-color-scheme: dark)"
    content="#080808"
  />
  <link
    rel="preload"
    href="/fonts/PPObjectSans-Regular.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />
  <link
    rel="preload"
    href="/fonts/SUIT-Regular.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />
  <link
    rel="preload"
    href="/fonts/PPFraktionMono-Regular.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />
  <link
    rel="preload"
    href="/fonts/PPTelegraf-Regular.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />

  <meta name="theme-color" content="#f9fafb" />
  <meta name="color-scheme" content="dark light" />
  <meta name="robots" content="index,follow" />
  <meta name="author" content={meta.author} />
  <SEO
    title={title ? title + ' - ' + meta.author : meta.author}
    description={description || meta.description}
    openGraph={{
      basic: {
        title: title || meta.title,
        type: inPost ? 'article' : 'website',
        image: `${Astro.site}${meta.image.url}`,
      },
      optional: {
        description: description || meta.description,
      },
      image: {
        width: meta.image.width,
        height: meta.image.height,
        alt: meta.image.alt,
      },
    }}
    twitter={{
      card: 'summary_large_image',
      site: '@jcha0713',
      creator: '@jcha0713',
    }}
    extend={extendMeta}
  />
  <link rel="icon" href="/assets/favicon.ico" sizes="any" />
  <link rel="icon" href="/assets/icon.svg" type="image/svg+xml" />
  <link rel="apple-touch-icon" href="/assets/apple-touch-icon.png" />
  <link rel="manifest" href="/manifest.webmanifest" />

  <script>
    ;(function changeTheme() {
      const root = document.documentElement
      if (
        localStorage.getItem('color-theme') === 'dark' ||
        (!('color-theme' in localStorage) &&
          window.matchMedia('(prefers-color-scheme: dark)').matches)
      ) {
        root.classList.add('dark')
      } else {
        root.classList.remove('dark')
      }
    })()
  </script>
</head>
