---
import '../styles/global.css'

export interface Props {
  title: string
  description?: string
  image?: string
  next?: string
  prev?: string
  canonicalURL?: string | URL
}

const { title, description } = Astro.props as Props
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width" />
<meta name="theme-color" media="(prefers-color-scheme: dark)" content="#080808"
/>
<link
  rel="preload"
  href="/fonts/PPObjectSans-Regular.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/>
<link
  rel="preload"
  href="/fonts/SUIT-Regular.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/>
<link
  rel="preload"
  href="/fonts/PPFraktionMono-Regular.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/>
<meta name="theme-color" content="#ced8e4" />
<title>{title}</title>
<meta name="description" content={description} />
<link rel="icon" href="/assets/favicon.ico" sizes="any" />
<link rel="icon" href="/assets/icon.svg" type="image/svg+xml" />
<link rel="apple-touch-icon" href="/assets/apple-touch-icon.png" />
<link rel="manifest" href="/manifest.webmanifest" />
<script>
  // if the localStorage has 'color-theme' item and 'dark' value pair
  // or
  // if there is nothing in localStorage and prefers-color-scheme: dark is present,
  // add the dark class
  if (
    localStorage.getItem('color-theme') === 'dark' ||
    (!('color-theme' in localStorage) &&
      window.matchMedia('(prefers-color-scheme: dark)').matches)
  ) {
    document.documentElement.classList.add('dark')
  } else {
    document.documentElement.classList.remove('dark')
  }
</script>
