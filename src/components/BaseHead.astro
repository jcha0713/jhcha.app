---
import '../styles/global.css'
import { SEO } from 'astro-seo'

export interface Props {
  title: string
  description?: string
  image?: string
  next?: string
  prev?: string
  canonicalURL?: string | URL
}

const { title, description } = Astro.props as Props
---

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width" />
  <meta
    name="theme-color"
    media="(prefers-color-scheme: dark)"
    content="#080808"
  />
  <link
    rel="preload"
    href="/fonts/PPObjectSans-Regular.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />
  <link
    rel="preload"
    href="/fonts/SUIT-Regular.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />
  <link
    rel="preload"
    href="/fonts/PPFraktionMono-Regular.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />
  <link
    rel="preload"
    href="/fonts/PPTelegraf-Regular.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />
  <meta name="theme-color" content="#f9fafb" />
  <meta name="color-scheme" content="dark light" />
  <title>{title}</title>
  <meta name="description" content={description} />
  <link rel="icon" href="/assets/favicon.ico" sizes="any" />
  <link rel="icon" href="/assets/icon.svg" type="image/svg+xml" />
  <link rel="apple-touch-icon" href="/assets/apple-touch-icon.png" />
  <link rel="manifest" href="/manifest.webmanifest" />

  <script is:inline>
    ;(function changeTheme() {
      const root = document.documentElement
      if (
        localStorage.getItem('color-theme') === 'dark' ||
        (!('color-theme' in localStorage) &&
          window.matchMedia('(prefers-color-scheme: dark)').matches)
      ) {
        root.classList.add('dark')
      } else {
        root.classList.remove('dark')
      }
    })()
  </script>
</head>
