---
import { Icon } from 'astro-icon'
import XElement from 'astro-xelement'

const { inPost } = Astro.props

const { button: Button } = XElement
---

<nav
  class="sticky top-0 px-main z-10 mb-3 sm:mb-8 box-border flex justify-between items-center pt-4 pb-5
  font-sans dark:border-dark-border bg-light-bg dark:bg-dark-bg darkTransition"
  role="navigation"
>
  <div id="logo" role="banner">
    <a href="/" class="text-lg items-center flex gap-3" aria-label="Go to home">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 367.6 367.6"
        class="w-7 dark:fill-light-bg dark:brightness-90"
        aria-hidden="true"
        focusable="false"
      >
        <ellipse class="ec" cx="183.8" cy="183.8" rx="53.02" ry="183.8"
        ></ellipse><ellipse
          class="ec"
          cx="183.8"
          cy="183.8"
          rx="53.02"
          ry="183.8"
          transform="translate(-76.13 183.8) rotate(-45)"></ellipse><ellipse
          class="ec"
          cx="183.8"
          cy="183.8"
          rx="183.8"
          ry="53.02"></ellipse><ellipse
          class="ec"
          cx="183.8"
          cy="183.8"
          rx="183.8"
          ry="53.02"
          transform="translate(-76.13 183.8) rotate(-45)"></ellipse></svg
      >
      <span class="hidden sm:block" aria-label="Joohoon Cha's website">
        jhcha.app<span class="font-mono ">(*)</span>
      </span>
    </a>
  </div>

  <div class="flex flex-row items-center justify-end gap-1 md:gap-2 font-mono">
    {inPost && (
      <a href="/blog" aria-label="Go back">
        <span class="btn cursor-pointer bg-zinc-200 transition-[font] hover:text-xl dark:bg-zinc-800">
          {' '}
          cd ..{' '}
        </span>
      </a>
    )}
    <a href="/blog">
      <span
        class="btn cursor-pointer bg-zinc-300 dark:bg-zinc-700 hover:text-xl transition-[font]"
      >
        blog
      </span>
    </a>
    <a href="/info">
      <span
        class="btn cursor-pointer bg-zinc-800 dark:bg-zinc-200 dark:text-light-text text-dark-text font-mono hover:text-xl transition-[font]"
      >
        info
      </span>
    </a>
    <Button
      class="btn px-2 border border-zinc-300 hover:border-zinc-600 dark:border-dark-border dark:hover:border-zinc-300"
      aria-label="Change color theme"
      @click={(e, store) => {
        const theme = localStorage.getItem('color-theme')

        if (theme) {
          // when color-theme key is present in the localStorage
          if (theme === 'light') {
            document.documentElement.classList.add('dark')
            localStorage.setItem('color-theme', 'dark')
          } else if (theme === 'dark') {
            document.documentElement.classList.remove('dark')
            localStorage.setItem('color-theme', 'light')
          }
        } else {
          // if there is no key-value pair in the localStorage
          if (document.documentElement.classList.contains('dark')) {
            document.documentElement.classList.remove('dark')
            localStorage.setItem('color-theme', 'light')
          } else {
            document.documentElement.classList.add('dark')
            localStorage.setItem('color-theme', 'dark')
          }
        }
      }}
    >
      <Icon
        class="w-5"
        name="radix-icons:shadow-inner"
        aria-hidden="true"
        focusable="false"
      />
    </Button>
  </div>
</nav>
